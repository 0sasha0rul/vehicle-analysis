# Generated by Django 5.2 on 2025-04-12 08:21

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EVVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('mass_kg', models.FloatField(verbose_name='Масса (кг)')),
                ('frontal_area_m2', models.FloatField(verbose_name='Лобовая площадь (м²)')),
                ('drag_coefficient', models.FloatField(verbose_name='Коэффициент аэродинамического сопротивления (Cx)')),
                ('rolling_coefficient', models.FloatField(verbose_name='Коэффициент сопротивления качению (Cr)')),
                ('road_type', models.CharField(choices=[('city', 'Город'), ('highway', 'Трасса'), ('mixed', 'Смешанный')], default='mixed', max_length=10)),
                ('battery_capacity_kwh', models.FloatField(blank=True, null=True, verbose_name='Ёмкость аккумулятора (кВт·ч)')),
                ('energy_consumption_kwhp100km', models.FloatField(blank=True, null=True, verbose_name='Потребление энергии (кВт·ч/100 км)')),
                ('motor_efficiency', models.FloatField(blank=True, null=True, verbose_name='КПД электродвигателя')),
                ('charging_efficiency', models.FloatField(blank=True, default=0.9, null=True, verbose_name='КПД зарядки от сети')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HEVVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('mass_kg', models.FloatField(verbose_name='Масса (кг)')),
                ('frontal_area_m2', models.FloatField(verbose_name='Лобовая площадь (м²)')),
                ('drag_coefficient', models.FloatField(verbose_name='Коэффициент аэродинамического сопротивления (Cx)')),
                ('rolling_coefficient', models.FloatField(verbose_name='Коэффициент сопротивления качению (Cr)')),
                ('road_type', models.CharField(choices=[('city', 'Город'), ('highway', 'Трасса'), ('mixed', 'Смешанный')], default='mixed', max_length=10)),
                ('engine_efficiency', models.FloatField(blank=True, help_text='Пример: 0.35 для 35% КПД', null=True, verbose_name='КПД двигателя')),
                ('fuel_consumption_lp100km', models.FloatField(blank=True, null=True, verbose_name='Расход топлива (л/100 км)')),
                ('co2_emissions_gl', models.FloatField(blank=True, default=2300, null=True, verbose_name='Выбросы CO₂ (г/л)')),
                ('transmission_ratio', models.FloatField(blank=True, null=True, verbose_name='Передаточное число трансмиссии')),
                ('battery_capacity_kwh', models.FloatField(blank=True, null=True, verbose_name='Ёмкость аккумулятора (кВт·ч)')),
                ('energy_consumption_kwhp100km', models.FloatField(blank=True, null=True, verbose_name='Потребление энергии (кВт·ч/100 км)')),
                ('motor_efficiency', models.FloatField(blank=True, null=True, verbose_name='КПД электродвигателя')),
                ('charging_efficiency', models.FloatField(blank=True, default=0.9, null=True, verbose_name='КПД зарядки от сети')),
                ('ice_share', models.FloatField(default=0.5, help_text='От 0 до 1 (например, 0.7 для 70%)', verbose_name='Доля работы ДВС')),
                ('generator_efficiency', models.FloatField(default=0.85, verbose_name='КПД генератора')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ICEVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('mass_kg', models.FloatField(verbose_name='Масса (кг)')),
                ('frontal_area_m2', models.FloatField(verbose_name='Лобовая площадь (м²)')),
                ('drag_coefficient', models.FloatField(verbose_name='Коэффициент аэродинамического сопротивления (Cx)')),
                ('rolling_coefficient', models.FloatField(verbose_name='Коэффициент сопротивления качению (Cr)')),
                ('road_type', models.CharField(choices=[('city', 'Город'), ('highway', 'Трасса'), ('mixed', 'Смешанный')], default='mixed', max_length=10)),
                ('engine_efficiency', models.FloatField(blank=True, help_text='Пример: 0.35 для 35% КПД', null=True, verbose_name='КПД двигателя')),
                ('fuel_consumption_lp100km', models.FloatField(blank=True, null=True, verbose_name='Расход топлива (л/100 км)')),
                ('co2_emissions_gl', models.FloatField(blank=True, default=2300, null=True, verbose_name='Выбросы CO₂ (г/л)')),
                ('transmission_ratio', models.FloatField(blank=True, null=True, verbose_name='Передаточное число трансмиссии')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
