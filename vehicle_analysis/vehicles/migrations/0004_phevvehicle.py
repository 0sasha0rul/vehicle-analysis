# Generated by Django 5.2 on 2025-04-22 09:04

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vehicles', '0003_remove_hevvehicle_transmission_ratio_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PHEVVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('mass_kg', models.FloatField(verbose_name='Масса (кг)')),
                ('frontal_area_m2', models.FloatField(verbose_name='Лобовая площадь (м²)')),
                ('drag_coefficient', models.FloatField(verbose_name='Коэффициент аэродинамического сопротивления (Cx)')),
                ('rolling_coefficient', models.FloatField(verbose_name='Коэффициент сопротивления качению (Cr)')),
                ('production_price', models.FloatField(default=1000, verbose_name='Стоимость производства')),
                ('road_type', models.CharField(choices=[('city', 'Город'), ('highway', 'Трасса'), ('mixed', 'Смешанный')], default='mixed', max_length=10)),
                ('engine_efficiency', models.FloatField(blank=True, help_text='Пример: 0.35 для 35% КПД', null=True, verbose_name='КПД двигателя')),
                ('fuel_consumption_lp100km', models.FloatField(blank=True, null=True, verbose_name='Расход топлива (л/100 км)')),
                ('co2_emissions_gl', models.FloatField(blank=True, default=2300, null=True, verbose_name='Выбросы CO₂ (г/л)')),
                ('battery_capacity_kwh', models.FloatField(blank=True, null=True, verbose_name='Ёмкость аккумулятора (кВт·ч)')),
                ('energy_consumption_kwhp100km', models.FloatField(blank=True, null=True, verbose_name='Потребление энергии (кВт·ч/100 км)')),
                ('motor_efficiency', models.FloatField(blank=True, null=True, verbose_name='КПД электродвигателя')),
                ('charging_efficiency', models.FloatField(blank=True, default=0.9, null=True, verbose_name='КПД зарядки от сети')),
                ('electric_range_km', models.FloatField(blank=True, null=True, verbose_name='Запас хода на электротяге (км)')),
                ('ice_range_km', models.FloatField(blank=True, null=True, verbose_name='Запас хода на ДВС (км)')),
                ('battery_depletion_threshold', models.FloatField(default=20.0, help_text='Процент заряда батареи, при котором включается ДВС', verbose_name='Порог разряда батареи для перехода на ДВС (%)')),
                ('charging_power_kw', models.FloatField(blank=True, help_text='Максимальная мощность зарядки от сети', null=True, verbose_name='Мощность зарядки (кВт)')),
                ('regen_braking_efficiency', models.FloatField(default=0.7, help_text='Эффективность восстановления энергии при торможении', verbose_name='КПД рекуперативного торможения')),
            ],
            options={
                'verbose_name': 'PHEV автомобиль',
                'verbose_name_plural': 'PHEV автомобили',
            },
        ),
    ]
